name: CI

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  install_dependency:
    name: Install dependency
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle Install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Cache Pods
        id: cache-pods
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Build Pods
        if: steps.cache-pods.outputs.cache-hit != 'true'
        run: bundle exec pod install
  
  swift_lint:
    name: SwiftLint
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run Swiftlint
        run: swiftlint

  build:
    name: Build Xcode Project
    runs-on: macos-latest
    needs: [install_dependency]

    steps:
      - uses: actions/checkout@v2

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Load Pods
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}

      - name: Build
        run: xcodebuild clean build test -workspace RestaurantApp.xcworkspace -scheme "restaurant-app" -sdk iphonesimulator -destination "platform=iOS Simulator,OS=14.2,name=iPhone 11 Pro" -derivedDataPath Build/ -enableCodeCoverage YES ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO

      - name: Create Code Coverage Report
        run: bash xccov-to-sonarqube-generic.sh Build/Logs/Test/*.xcresult/ > sonarqube-generic-coverage.xml

      - name: Upload Coverage Report to Artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: sonarqube-generic-coverage.xml

  sonarcloud:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Coverage Report from Artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage-report

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
